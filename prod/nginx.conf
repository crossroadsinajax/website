load_module modules/ngx_http_opentracing_module.so;

#user html;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
	worker_connections  1024;
}


http {
	opentracing on; # Enable OpenTracing
	opentracing_tag http_user_agent $http_user_agent; # Add a tag to each trace!
	opentracing_trace_locations off; # Emit only one span per request.
	opentracing_load_tracer /usr/local/lib/libdd_opentracing_plugin.so /etc/nginx/dd-config.json;

	include       mime.types;
	default_type  application/octet-stream;

	#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
	#                  '$status $body_bytes_sent "$http_referer" '
	#                  '"$http_user_agent" "$http_x_forwarded_for"';

	#access_log  logs/access.log  main;

	sendfile        on;
	#tcp_nopush     on;

	#keepalive_timeout  0;
	keepalive_timeout  65;

	#gzip  on;

	server {
		listen       80;
		server_name  localhost;
		client_max_body_size 100M;

		#charset koi8-r;

		#access_log  logs/host.access.log  main;

		location / {
			root   /usr/share/nginx/html;
			index  index.html index.htm;
		}

		#error_page  404              /404.html;

		# redirect server error pages to the static page /50x.html
		#
		error_page   500 502 503 504  /50x.html;
		location = /50x.html {
			root   /usr/share/nginx/html;
		}
	}
	server {
		server_name staging.crossroadsajax.church;
		access_log /var/log/nginx/$host;
		client_max_body_size 100M;

		location / {
			proxy_pass http://localhost:8001/;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto https;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_redirect off;
		}

		error_page 502 /50x.html;
		location = /50x.html {
			root /usr/share/nginx/html;
		}
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/staging.crossroadsajax.church/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/staging.crossroadsajax.church/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

	server {
		server_name crossroadsajax.church;
		access_log /var/log/nginx/$host;
		client_max_body_size 100M;

		# root /var/lib/docker/volumes/prod_staticfiles/_data;
		location /static/ {
			root /home/kyle/prod/static;
		}

		# location /ws/ {
		# 	proxy_pass http://127.0.0.1:8001/;
		# 	proxy_set_header HOST $host;
		# 	proxy_set_header X-Real-IP $remote_addr;
		# 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		# 	proxy_set_header X-Forwarded-Proto $scheme;
		# 	proxy_pass_request_headers on;
		# 	proxy_http_version 1.1;
		# 	proxy_set_header Upgrade $http_upgrade;
		# 	proxy_set_header Connection "Upgrade";
		# 	proxy_set_header Host $host;
		# }

		location / {
			opentracing_operation_name "$request_method $uri";
			opentracing_propagate_context;
			proxy_pass http://127.0.0.1:8001/;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		# 	proxy_set_header X-Forwarded-Proto $scheme;
			# proxy_set_header X-Forwarded-Proto https;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			# proxy_set_header Connection "";
			proxy_http_version 1.1;
			proxy_redirect off;
			proxy_buffering off;
		}

		error_page 502 /50x.html;
		location = /50x.html {
			root /usr/share/nginx/html;
		}


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/crossroadsajax.church-0001/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/crossroadsajax.church-0001/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}

server {
    if ($host = staging.crossroadsajax.church) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name staging.crossroadsajax.church;
    listen 80;
    return 404; # managed by Certbot
}
server {
	if ($host = crossroadsajax.church) {
		return 301 https://$host$request_uri;
	} # managed by Certbot

	server_name crossroadsajax.church;
	listen 80;
	return 404; # managed by Certbot
}
}
