# Generated by Django 3.0.3 on 2020-02-28 18:44

import church.models
from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0045_assign_unlock_grouppagepermission'),
        ('church', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServicePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('date', models.DateField(verbose_name='Service date')),
                ('mediasec', wagtail.core.fields.StreamField([('media', church.models.ServiceMediaBlock(icon='media'))])),
                ('bulletin', wagtail.core.fields.StreamField([('bulletin_section', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('items', wagtail.core.blocks.ListBlock(church.models.BulletinItemBlock, label='Bulletin item'))], name='Bulletin Section'))])),
                ('service', wagtail.core.fields.StreamField([('worship_section', wagtail.core.blocks.StructBlock([('worship_songs', wagtail.core.blocks.ListBlock(church.models.WorshipSongBlock, label='Worship song'))], name='Worship Section')), ('announcements_section', wagtail.core.blocks.StructBlock([], name='Announcement Section')), ('sermon_section', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('speaker', wagtail.core.blocks.CharBlock()), ('slides_url', wagtail.core.blocks.CharBlock())], name='Sermon Section')), ('discussion_section', wagtail.core.blocks.StructBlock([('items', church.models.IDListBlock(church.models.DiscussionItemBlock, label='Discussion item'))], name='Discussion Section'))])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ServicesIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro', wagtail.core.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
