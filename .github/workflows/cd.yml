---
name: continuous delivery
on: [push] # yamllint disable-line
jobs:
  deploy_prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/prod'

    steps:
      - uses: actions/checkout@v2
      - name: store commit hash
        run: echo "GIT_TAG=$(git describe --always --abbrev)" >> .env

      - name: log in to github registry
        run: docker login -u publisher -p ${{ secrets.GHCR_TOKEN }} ghcr.io

      - name: build images
        run: docker-compose -f prod.yml build

      - name: publish to registry
        run: docker-compose -f prod.yml push

      - name: deploy to swarm
        run: |
          mkdir -p "$HOME/.ssh"
          echo "$SSH_PRIV_KEY" > "$HOME/.ssh/docker"
          chmod 600 "$HOME/.ssh/docker"
          eval $(ssh-agent)
          ssh-add "$HOME/.ssh/docker"
          echo "crossroadsajax.church $SSH_KNOWN_HOST" >> ~/.ssh/known_hosts
          docker --host "ssh://kyle@crossroadsajax.church" \
            stack deploy --compose-file <(docker-compose \
            -f prod.yml config) --with-registry-auth prod
        shell: bash
        env:
          SSH_PRIV_KEY: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
          SSH_KNOWN_HOST: ${{ secrets.DOCKER_SSH_PUBLIC_KEY }}

  deploy_staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'

    steps:
      - uses: actions/checkout@v2
      - name: log in to github registry
        run: docker login -u publisher -p ${{ secrets.GHCR_TOKEN }} ghcr.io

      - name: build images
        run: docker-compose -f staging.yml build

      - name: publish to registry
        run: docker-compose -f staging.yml push

      - name: deploy to swarm
        run: |
          mkdir -p "$HOME/.ssh"
          echo "$SSH_PRIV_KEY" > "$HOME/.ssh/docker"
          chmod 600 "$HOME/.ssh/docker"
          eval $(ssh-agent)
          ssh-add "$HOME/.ssh/docker"
          echo "crossroadsajax.church $SSH_KNOWN_HOST" >> ~/.ssh/known_hosts
          docker --host "ssh://kyle@crossroadsajax.church" \
            stack deploy --compose-file <(docker-compose \
            -f staging.yml config) --with-registry-auth staging
        shell: bash
        env:
          SSH_PRIV_KEY: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
          SSH_KNOWN_HOST: ${{ secrets.DOCKER_SSH_PUBLIC_KEY }}
